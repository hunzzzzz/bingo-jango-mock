services:
  # MySQL
  mysql:
    container_name: mysql
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root.mysql!
      MYSQL_DATABASE: bingo
      MYSQL_USER: hunzz
      MYSQL_PASSWORD: hunzz.mysql!
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - bingo-network
  # Redis
  redis:
    image: redis:7.4
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bingo-network

  # Food Service
  food-service:
    build:
      context: ./food
      dockerfile: Dockerfile
    container_name: food-service
    ports:
      - "8081:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/bingo?useSSL=false
      SPRING_DATASOURCE_USERNAME: hunzz
      SPRING_DATASOURCE_PASSWORD: hunzz.mysql!
      SPRING_REDIS_HOST: redis
    depends_on:
      - mysql
      - redis
    networks:
      - bingo-network

  # Product Service
  product-service:
    build:
      context: ./product
      dockerfile: Dockerfile
    container_name: product-service
    ports:
      - "8082:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/bingo?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
      SPRING_DATASOURCE_USERNAME: hunzz
      SPRING_DATASOURCE_PASSWORD: hunzz.mysql!
      SPRING_REDIS_HOST: redis
    depends_on:
      - mysql
      - redis
    networks:
      - bingo-network

  # Payment Service
  payment-service:
    build:
      context: ./payment
      dockerfile: Dockerfile
    container_name: payment-service
    ports:
      - "8083:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/bingo?useSSL=false
      SPRING_DATASOURCE_USERNAME: hunzz
      SPRING_DATASOURCE_PASSWORD: hunzz.mysql!
      SPRING_REDIS_HOST: redis
    depends_on:
      - mysql
      - redis
    networks:
      - bingo-network

# 네트워크 및 볼륨 설정
networks:
  bingo-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data: